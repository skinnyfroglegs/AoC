package dayEight;

	import java.io.IOException;
	import java.nio.file.*;
	import java.util.*;

	public class ChallengeOneDayEight {
	    public static void main(String[] args) throws IOException {
	        Path input = Paths.get("inputTreeHouse.txt");
	        List<String> trees = Files.readAllLines(input);
	        
	        String[] split;
	        String[] split2;
	        int up = 0, down = 0, left = 0, right = 0, center = 0, visible = 0;

	        for (int i = 0; i < trees.size(); i++){
	            split = trees.get(i).split("");
	            
	            if (i == 0 || i == trees.size()-1){
	                visible += split.length;
	            } else {
	                for (int j = 0; j < split.length; j++){
	                    if (j == 0 || j == split.length-1){
	                        visible += 1;
	                    }
	                    else {
	                        up = 0;
	                        down = 0;
	                        left = 0;
	                        right = 0;

	                        center = Integer.parseInt(split[j]);

	                        for (int count = i-1; count>=0; count--){
	                            split2 = trees.get(count).split("");
	                            if (up < Integer.parseInt(split2[j])){
	                                up = Integer.parseInt(split2[j]);
	                            }
	                        }

	                        for (int count = i+1; count<trees.size(); count++){
	                            split2 = trees.get(count).split("");
	                            if (down < Integer.parseInt(split2[j])){
	                                down = Integer.parseInt(split2[j]);
	                            }
	                        }

	                        for (int count = 0; count<split.length; count++){
	                            if (count < j){
	                                if (left < Integer.parseInt(split[count])){
	                                    left = Integer.parseInt(split[count]);
	                                }
	                            }

	                            else if (count > j){
	                                if (right < Integer.parseInt(split[count])){
	                                    right = Integer.parseInt(split[count]);
	                                }
	                            }
	                        }

	                        if (center > up || center > down || center > left || center > right){
	                            visible += 1;
	                        }
	                    }
	                }
	            }
	        }
	        System.out.println(visible);
	    }
	}
